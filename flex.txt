FLEXBOX LAYOUT
--------------
The Flexible Box Layout Module, makes it easier to design flexible responsive layout structure without using float or positioning.

*** FLEX CONTAINER(PARENT)
--------------------------
The flex container is the Parent Element.The flex container becomes flexible by setting the display property to flex:
The flex container properties are:
-- flex-direction
-- flex-wrap
-- flex-flow
-- justify-content
-- align-items
-- align-content

The flex-direction Property
----------------------------
The flex-direction property defines in which direction the container wants to stack the flex items.

The flex-wrap Property
-----------------------
The flex-wrap property specifies whether the flex items should wrap or not.

The flex-flow Property
-----------------------
The flex-flow property is a shorthand property for setting both the flex-direction and flex-wrap properties.

The justify-content Property
-----------------------------
The justify-content property is used to align the flex items:
The align-items Property
------------------------
The align-items property is used to align the flex items.

*** FLEX ITEMS(CHILD ELEMENTS)
------------------------------
The direct child elements of a flex container automatically becomes flexible (flex) items.
The flex item properties are:
-- order
-- flex-grow
-- flex-shrink
-- flex-basis
-- flex
-- align-self

The order Property
------------------
The order property specifies the order of the flex items.
The first flex item in the code does not have to appear as the first item in the layout.
The order value must be a number, default value is 0.
<div class="flex-container">
  <div style="order: 3">1</div>
  <div style="order: 2">2</div>
  <div style="order: 4">3</div>
  <div style="order: 1">4</div>
</div>

The flex-grow Property
----------------------
The flex-grow property specifies how much a flex item will grow relative to the rest of the flex items.
The value must be a number, default value is 0.
<div class="flex-container">
  <div style="flex-grow: 1">1</div>
  <div style="flex-grow: 1">2</div>
  <div style="flex-grow: 8">3</div>
</div>

The flex-shrink Property
------------------------
The flex-shrink property specifies how much a flex item will shrink relative to the rest of the flex items.
The value must be a number, default value is 1.
<div class="flex-container">
  <div>1</div>
  <div>2</div>
  <div style="flex-shrink: 0">3</div>
  <div>4</div>
  <div>5</div>
  <div>6</div>
  <div>7</div>
  <div>8</div>
  <div>9</div>
  <div>10</div>
</div>

The flex-basis Property
------------------------
The flex-basis property specifies the initial length of a flex item.
Example
Set the initial length of the third flex item to 200 pixels:

<div class="flex-container">
  <div>1</div>
  <div>2</div>
  <div style="flex-basis: 200px">3</div>
  <div>4</div>
</div>

The flex Property
------------------
The flex property is a shorthand property for the flex-grow, flex-shrink, and flex-basis properties.
Example
Make the third flex item not growable (0), not shrinkable (0), and with an initial length of 200 pixels:

<div class="flex-container">
  <div>1</div>
  <div>2</div>
  <div style="flex: 0 0 200px">3</div>
  <div>4</div>
</div>

The align-self Property
------------------------
The align-self property specifies the alignment for the selected item inside the flexible container.
The align-self property overrides the default alignment set by the container's align-items property.
In these examples we use a 200 pixels high container, to better demonstrate the align-self property:

Example
Align the third flex item in the middle of the container:

<div class="flex-container">
  <div>1</div>
  <div>2</div>
  <div style="align-self: center">3</div>
  <div>4</div>
</div>
Example
Align the second flex item at the top of the container, and the third flex item at the bottom of the container:

<div class="flex-container">
  <div>1</div>
  <div style="align-self: flex-start">2</div>
  <div style="align-self: flex-end">3</div>
  <div>4</div>
</div>